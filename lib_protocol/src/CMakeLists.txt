cmake_minimum_required(VERSION 2.8)
#set(CMAKE_BUILD_TYPE Release)
set(CMAKE_BUILD_TYPE Release CACHE STRING "set build type to release")

#add_definitions("-g")
add_definitions("-W")
add_definitions("-O3")
add_definitions("-Wall")
add_definitions("-Werror")
add_definitions("-Wshadow")
add_definitions("-Wpointer-arith")
add_definitions("-Waggregate-return")
add_definitions("-Wmissing-prototypes")
add_definitions("-D_REENTRANT")
add_definitions("-D_USE_FAST_MACRO")
add_definitions("-Wno-long-long")
add_definitions("-Wuninitialized")
add_definitions("-D_POSIX_PTHREAD_SEMANTICS")
add_definitions("-DACL_ARM_LINUX")

if (CMAKE_SYSTEM_NAME MATCHES "Linux")
	add_definitions("-DLINUX2")
	add_definitions("-Wstrict-prototypes")
	add_definitions("-fPIC")
endif()

set(rpath lib_protocol)
set(src ${PROJECT_SOURCE_DIR}/${rpath}/src)
set(acl_path ${PROJECT_SOURCE_DIR}/lib_acl)
set(acl_include ${acl_path}/include)

include_directories(${acl_include})
include_directories(${PROJECT_SOURCE_DIR}/${rpath}/src)
include_directories(${PROJECT_SOURCE_DIR}/${rpath}/include)

aux_source_directory(${src} lib_src)
aux_source_directory(${src}/http lib_src)
aux_source_directory(${src}/smtp lib_src)
aux_source_directory(${src}/icmp lib_src)

#add_library(_protocol ${lib_src})
set(lib_output_path ${PROJECT_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${lib_output_path})
#SET(CMAKE_SKIP_BUILD_RPATH FALSE)
#set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,-rpath,. -L${lib_output_path} -l_acl")
add_library(_protocol SHARED ${lib_src})
link_directories(${PROJECT_BINARY_DIR}/lib)
target_link_libraries(_protocol _acl)
